{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","components/Home.js","apiConfig.js","api/auth.js","components/AutoDismissAlert/messages.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/question.js","components/questions/questions.js","components/questions/oneQuestion.js","components/questions/editQuestion.js","components/questions/createQuestion.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","style","backgroundColor","expand","Container","Brand","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","Home","Spinner","animation","role","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","getOneQuestionFailure","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","newUser","setNewUser","onSignIn","userSelect","cursor","onClick","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","getOneQuestion","get","createQuestion","title","body","question","owner","showAllQuestions","updateQuestion","deleteQuestion","Questions","questions","setQuestions","askQuestion","setAskQuestion","then","fetchQuestions","renderedQuestions","map","length","OneQuestion","setQuestion","shouldEdit","setShouldEdit","useParams","fetchQuestion","EditQuestion","setTitle","setBody","updated","setUpdated","onDeleteQuestion","onEditQuestion","as","rows","CreateQuestion","onSubmitForm","App","msgAlerts","setMsgAlerts","uuid","path","element","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d182a1c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/change-password' className='nav-link'>\n      Change Password\n    </NavLink>\n    <NavLink to='/sign-out' className='nav-link'>\n      Sign Out\n    </NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up' className='nav-link'>\n      Sign Up\n    </NavLink>\n    <NavLink to='/sign-in' className='nav-link'>\n      Sign In\n    </NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>\n      Home\n    </NavLink>\n  </>\n)\n\nconst Header = ({ user }) => (\n  <Navbar style={{ backgroundColor: '#47126b' }} variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>\n          Yoohoo Questions?\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\n          )}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","import React from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\n\nconst Home = ({ user }) => {\n  // This component will route a user either to the main page: questions, or to the sign in page, depending on whether they are signed in. Also functionally 'starts' a new user at the sign in page\n\n  if (user) {\n    return <Navigate to='/questions' />\n  }\n\n  if (!user) {\n    return <Navigate to='/sign-in' />\n  }\n\n  return (\n    <div>\n      <h4>Fetching Profile</h4>\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    </div>\n  )\n}\n\nexport default Home\n","let apiUrl\nconst apiUrls = {\n  production: 'https://yoohoo-answers-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-pw/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\nexport const showAllQuestionsFailure = 'Where did all our questions go? Try again later.'\nexport const getOneQuestionFailure = 'Couldn\\'t find that question. Please try again.'\nexport const deleteQuestionSuccess = 'Question deleted successfully.'\nexport const deleteQuestionFailure = 'Aw beans, that didn\\'t work. Try again in a moment.'\nexport const updateQuestionSuccess = 'Question updated successfully.'\nexport const updateQuestionFailure = 'Aw geez, we couldn\\'t update that question. Check your inputs and try again.'\nexport const createQuestionSuccess = 'Successfully created question! Hopefully someone will answer soon!'\nexport const createQuestionFailure = 'Uh-oh, couldn\\'t ask that question! Check your inputs and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='form-bg-style col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [newUser, setNewUser] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  if (newUser) {\n    return <Navigate to='/sign-up' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='form-bg-style col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n        <br />\n        <div style={{ userSelect: 'none' }}>First time here? <span style={{ color: 'blue', cursor: 'pointer' }} onClick={() => setNewUser(true)}>Sign Up Here!</span></div>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import axios from 'axios'\nimport apiUrl from '../apiConfig'\n\nexport const getOneQuestion = (user, id) => {\n  return axios.get(`${apiUrl}/questions/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const createQuestion = (user, title, body) => {\n  return axios.post(\n    `${apiUrl}/questions/create/`,\n    {\n      question: {\n        title,\n        body,\n        owner: user.id\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const showAllQuestions = (user) => {\n  return axios.get(\n    `${apiUrl}/questions/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const updateQuestion = (title, body, user, id) => {\n  return axios.patch(\n    `${apiUrl}/questions/${id}/`,\n    {\n      question: {\n        title,\n        body,\n        owner: user.id\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const deleteQuestion = (user, id) => {\n  return axios.delete(\n    `${apiUrl}/questions/${id}/`,\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Spinner, Button } from 'react-bootstrap'\nimport { Navigate, Link } from 'react-router-dom'\nimport { showAllQuestions } from '../../api/question'\nimport { showAllQuestionsFailure } from '../AutoDismissAlert/messages'\n\nconst Questions = ({ msgAlert, user }) => {\n  const [questions, setQuestions] = useState([])\n  const [askQuestion, setAskQuestion] = useState(false)\n\n  if (!user) {\n    return <Navigate to='/sign-in' />\n  }\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        await showAllQuestions(user)\n          .then(res => setQuestions(res.data.questions))\n      } catch (error) {\n        msgAlert({\n          heading: 'Getting Questions Failed: ',\n          message: showAllQuestionsFailure,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchQuestions()\n  }, [])\n\n  const renderedQuestions = questions.map(question => {\n    return (\n      <li className='questions' key={question.id}>\n        <Link to={`/questions/${question.id}`}>\n          <h6>{question.title}</h6>\n        </Link>\n      </li>\n    )\n  })\n\n  if (askQuestion) {\n    return <Navigate to='/questions/create' />\n  }\n\n  if (questions.length === 0) {\n    return (\n      <>\n        <h4>Finding Some Questions</h4>\n        <Spinner animation='border' role='status'>\n          <span className='visually-hidden'>Loading...</span>\n        </Spinner>\n        <Button onClick={() => setAskQuestion(true)} variant='primary' type='button'>Ask a Question</Button>\n      </>\n    )\n  }\n\n  return (\n    <div className='display-area'>\n      <h3>Questions Ahoy!</h3>\n      <p>One of these days, we may even have answers...</p>\n      <Button onClick={() => { setAskQuestion(true) }} variant='primary' type='button'>Ask a Question</Button>\n      <ul>{renderedQuestions}</ul>\n    </div>\n  )\n}\n\nexport default Questions\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, useParams } from 'react-router-dom'\nimport { getOneQuestion } from '../../api/question'\nimport { Spinner, Button } from 'react-bootstrap'\nimport { getOneQuestionFailure } from '../AutoDismissAlert/messages'\n\nconst OneQuestion = ({ msgAlert, user }) => {\n  const [question, setQuestion] = useState(null)\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const [shouldEdit, setShouldEdit] = useState(false)\n  const { id } = useParams()\n\n  if (!user) {\n    return <Navigate to='/sign-in' />\n  }\n\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      try {\n        await getOneQuestion(user, id).then(res =>\n          setQuestion(res.data.question)\n        )\n      } catch (error) {\n        msgAlert({\n          heading: 'Finding question failed with error: ',\n          message: getOneQuestionFailure,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchQuestion()\n  }, [])\n\n  if (shouldNavigate) {\n    return <Navigate to='/questions' />\n  }\n\n  if (shouldEdit) {\n    return <Navigate to={`/questions/${id}/edit/`} />\n  }\n\n  if (question === null) {\n    return (\n      <>\n        <h4>Fetching Question</h4>\n        <Spinner animation='border' role='status'>\n          <span className='visually-hidden'>Loading...</span>\n        </Spinner>\n        <Button\n          onClick={() => setShouldNavigate(true)}\n          variant='primary'\n          type='button'\n        >\n          Return Home\n        </Button>\n      </>\n    )\n  } else if (question.owner === user.id) {\n    return (\n      <>\n        <h2>{question.title}</h2>\n        <br />\n        <p>{question.body}</p>\n        <br />\n        <Button\n          onClick={() => {\n            setShouldEdit(true)\n          }}\n          variant='success'\n          type='button'\n        >\n          Edit This Question\n        </Button>\n        <br />\n        <Button\n          onClick={() => {\n            setShouldNavigate(true)\n          }}\n          variant='primary'\n          type='button'\n        >\n          Back to Questions\n        </Button>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <h2>{question.title}</h2>\n        <br />\n        <p>{question.body}</p>\n        <Button\n          onClick={() => {\n            setShouldNavigate(true)\n          }}\n          variant='primary'\n          type='button'\n        >\n          Back to Questions\n        </Button>\n      </>\n    )\n  }\n}\n\nexport default OneQuestion\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, useParams } from 'react-router-dom'\nimport {\n  getOneQuestion,\n  updateQuestion,\n  deleteQuestion\n} from '../../api/question'\nimport { Spinner, Form, Button } from 'react-bootstrap'\nimport {\n  getOneQuestionFailure,\n  updateQuestionFailure,\n  updateQuestionSuccess,\n  deleteQuestionFailure,\n  deleteQuestionSuccess\n} from '../AutoDismissAlert/messages'\n\nconst EditQuestion = ({ msgAlert, user }) => {\n  const [question, setQuestion] = useState(null)\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [updated, setUpdated] = useState(false)\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n  const { id } = useParams()\n\n  if (!user) {\n    return <Navigate to='/sign-in' />\n  }\n\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      try {\n        await getOneQuestion(user, id).then(res =>\n          setQuestion(res.data.question)\n        )\n      } catch (error) {\n        msgAlert({\n          heading: 'Finding question failed with error: ',\n          message: getOneQuestionFailure,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchQuestion()\n  }, [])\n\n  const onDeleteQuestion = async () => {\n    try {\n      await deleteQuestion(user, id).then(\n        setShouldNavigate(true),\n        msgAlert({\n          heading: 'Question Deleted Successfully',\n          message: deleteQuestionSuccess,\n          variant: 'success'\n        })\n      )\n    } catch (error) {\n      msgAlert({\n        heading: 'Question Deletion failed with error: ',\n        message: deleteQuestionFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  const onEditQuestion = async event => {\n    event.preventDefault()\n\n    try {\n      await updateQuestion(title, body, user, id)\n      msgAlert({\n        heading: 'Question Updated Successfully',\n        message: updateQuestionSuccess,\n        variant: 'success'\n      })\n      setUpdated(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Question Update Failed',\n        message: updateQuestionFailure,\n        variant: 'danger'\n      })\n      setTitle('')\n      setBody('')\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/questions' />\n  }\n\n  if (updated) {\n    return <Navigate to={`/questions/${id}`} />\n  }\n\n  if (question === null) {\n    return (\n      <>\n        <h4>Fetching Question</h4>\n        <Spinner animation='border' role='status'>\n          <span className='visually-hidden'>Loading...</span>\n        </Spinner>\n        <Button\n          onClick={() => setShouldNavigate(true)}\n          variant='primary'\n          type='button'\n        >\n          Return Home\n        </Button>\n      </>\n    )\n  } else if (question.owner !== user.id) {\n    return (\n      <>\n        <h2>{question.title}</h2>\n        <br />\n        <p>{question.body}</p>\n        <Button\n          onClick={() => setShouldNavigate(true)}\n          variant='primary'\n          type='button'\n        >\n          Return Home\n        </Button>\n      </>\n    )\n  } else if (question.owner === user.id) {\n    return (\n      <>\n        <h2>{question.title}</h2>\n        <br />\n        <p>{question.body}</p>\n        <Button\n          onClick={() => setShouldNavigate(true)}\n          variant='primary'\n          type='button'\n        >\n          Return Home\n        </Button>\n        <Button\n          className='ownershipReq'\n          onClick={onDeleteQuestion}\n          variant='danger'\n          type='button'\n        >\n          Delete Question\n        </Button>\n        <br />\n        <div className='row'>\n          <Form className='form-bg-style' onSubmit={onEditQuestion}>\n            <Form.Group className='mb-3' controlId='title'>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder={question.title}\n                value={title}\n                onChange={event => setTitle(event.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className='mb-3' controlId='body'>\n              <Form.Label>Question Body</Form.Label>\n              <Form.Control\n                value={body}\n                as='textarea'\n                rows={3}\n                placeholder={question.body}\n                onChange={event => setBody(event.target.value)}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit'>\n              Submit Changes\n            </Button>\n          </Form>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default EditQuestion\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { createQuestion } from '../../api/question'\nimport { createQuestionFailure } from '../AutoDismissAlert/messages'\n\nimport { Form, Button } from 'react-bootstrap'\n\nconst CreateQuestion = ({ msgAlert, user }) => {\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  if (!user) {\n    return <Navigate to='/sign-in' />\n  }\n\n  const onSubmitForm = async event => {\n    event.preventDefault()\n\n    try {\n      await createQuestion(user, title, body)\n      setShouldNavigate(true)\n    } catch (error) {\n      setTitle('')\n      setBody('')\n      msgAlert({\n        heading: 'Question creation failed',\n        message: createQuestionFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/questions' />\n  }\n\n  return (\n    <div className='row'>\n      <Form className='ownershipReq' onSubmit={onSubmitForm}>\n        <Form.Group className='mb-3' controlId='title'>\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Question Title'\n            value={title}\n            onChange={event => setTitle(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group className='mb-3' controlId='body'>\n          <Form.Label>Question Body</Form.Label>\n          <Form.Control\n            value={body}\n            as='textarea'\n            rows={3}\n            placeholder='What do you want to ask the world?'\n            onChange={event => setBody(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button variant='primary' type='submit'>\n          Submit Question\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default CreateQuestion\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport Home from './components/Home'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport Questions from './components/questions/questions'\nimport OneQuestion from './components/questions/oneQuestion'\nimport EditQuestion from './components/questions/editQuestion'\nimport CreateQuestion from './components/questions/createQuestion'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/'\n            element={<Home user={user} />}\n          />\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-out'\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\n          />\n          <Route\n            path='/questions'\n            element={<Questions msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/questions/create'\n            element={<CreateQuestion msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/questions/:id'\n            element={<OneQuestion msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/questions/:id/edit'\n            element={<EditQuestion msgAlert={msgAlert} user={user} />}\n          />\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}